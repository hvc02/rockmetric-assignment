{"version":3,"sources":["assets/images/undraw_.svg","components/Dashboard.js","components/Button.js","components/Highchart.js","components/Landing.js","App.js","index.js"],"names":["module","exports","Dashboard","useState","rowData","setRowData","useEffect","fetch","then","response","json","data","className","style","width","height","rowSelection","field","filter","Button","props","type","onClick","handleClick","value","label","Highchart","options","setOptions","chartType","setChartType","e","target","loadChart","a","tokyo","london","date","res","map","item","city","push","Number","Date","toLocaleString","month","length","chart","tooltip","backgroundColor","legend","enabled","title","text","subtitle","xAxis","categories","yAxis","plotOptions","line","dataLabels","enableMouseTracking","series","name","console","log","marginTop","highcharts","Highcharts","Landing","to","src","heroImg","alt","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d13007cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_.5e09ece6.svg\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\n\r\nexport const Dashboard = () => {\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://rmimgblob.blob.core.windows.net/interviewdata/SampleRockData.json\"\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setRowData(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"ag-theme-material\"\r\n      style={{\r\n        width: 600,\r\n        height: 600,\r\n      }}\r\n    >\r\n      <AgGridReact rowData={rowData} rowSelection=\"multiple\">\r\n        <AgGridColumn\r\n          field=\"date\"\r\n          filter={true}\r\n          // checkboxSelection={true}\r\n        ></AgGridColumn>\r\n        <AgGridColumn field=\"city\" filter={true}></AgGridColumn>\r\n        <AgGridColumn field=\"value\" filter={true}></AgGridColumn>\r\n      </AgGridReact>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Button = (props) => {\r\n  const className = `button-${props.type}`;\r\n  return (\r\n    <div>\r\n      <button\r\n        className={className}\r\n        onClick={props.handleClick}\r\n        value={props.value}\r\n      >\r\n        {props.label}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { Button } from \"./Button\";\r\nexport const Highchart = () => {\r\n  const [options, setOptions] = useState({});\r\n  const [chartType, setChartType] = useState(\"line\");\r\n\r\n  const handleClick = (e) => {\r\n    setChartType(e.target.value);\r\n  };\r\n\r\n  const loadChart = async () => {\r\n    let tokyo = [];\r\n    let london = [];\r\n    let date = [];\r\n    const url =\r\n      \"https://rmimgblob.blob.core.windows.net/interviewdata/SampleRockData.json\";\r\n    try {\r\n      const res = await fetch(url);\r\n      const dataArr = await res.json();\r\n      // console.log(dataArr);\r\n\r\n      dataArr.map((item) => {\r\n        if (item.city === \"Tokyo\") tokyo.push(item.value);\r\n        else london.push(item.value);\r\n        date.push(item.date);\r\n      });\r\n      //converting string arrays to num & getting month name from date string\r\n      tokyo = tokyo.map(Number);\r\n      london = london.map(Number);\r\n      date = date.map((item) => {\r\n        return new Date(item).toLocaleString(\"default\", { month: \"short\" });\r\n      });\r\n      date.length = 12;\r\n\r\n      setOptions({\r\n        chart: {\r\n          type: chartType,\r\n        },\r\n        tooltip: {\r\n          backgroundColor: \"#fff\",\r\n        },\r\n        legend: {\r\n          enabled: false,\r\n        },\r\n        title: {\r\n          text: \"Monthly Average Temperature\",\r\n        },\r\n        subtitle: {\r\n          text: \"Source: Rockmetric Analysis\",\r\n        },\r\n        xAxis: {\r\n          categories: date,\r\n        },\r\n        yAxis: {\r\n          title: {\r\n            text: \"Temperature (Â°C)\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          line: {\r\n            dataLabels: {\r\n              enabled: true,\r\n            },\r\n            enableMouseTracking: true,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"tokyo\",\r\n            data: tokyo,\r\n          },\r\n          {\r\n            name: \"London\",\r\n            data: london,\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadChart();\r\n  }, [chartType]);\r\n\r\n  return (\r\n    <div style={{ marginTop: 200 }}>\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n      <div className=\"cta-buttons\">\r\n        <Button\r\n          type=\"primary\"\r\n          label=\"Line Chart\"\r\n          handleClick={handleClick}\r\n          value=\"line\"\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          label=\"Bar Chart\"\r\n          handleClick={handleClick}\r\n          value=\"column\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport heroImg from \"../assets/images/undraw_.svg\";\r\nimport { Button } from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const Landing = () => {\r\n  const primaryHeading = \"Build an Intelligent Enterprise\";\r\n  const secondaryHeading = \"AI, Automation and Analytics to Inspire\";\r\n  const subtitle =\r\n    \"Revolutionary platform for forward-looking teams to deliver lasting business impact. AI-powered automation to deliver sophisticated insights at scale without expanding support teams.\";\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"main-content\">\r\n          <h1 className=\"heading-primary\">{primaryHeading}</h1>\r\n          <h3 className=\"heading-secondary\">{secondaryHeading}</h3>\r\n          <p className=\"subtitle\">{subtitle}</p>\r\n\r\n          <div className=\"cta-buttons\">\r\n            <Link to=\"/chart\">\r\n              <Button type=\"primary\" label=\"View Chart\" />\r\n            </Link>\r\n            <Link to=\"/dashboard\">\r\n              <Button type=\"primary\" label=\"View Dashboard\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-image\">\r\n          <img src={heroImg} alt=\"hero-img\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Highchart } from \"./components/Highchart\";\nimport { Landing } from \"./components/Landing\";\nimport \"./App.css\";\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/chart\" component={Highchart} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}